{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\rajalakshmicrackers\\\\crackersecom\\\\src\\\\usercomponents\\\\marqueue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './marqueue.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Marqueue = () => {\n  _s();\n  // Holiday messages based on month or day\n  const holidayMessages = [{\n    month: 12,\n    message: 'Merry Christmas! Special discounts available for Christmas.'\n  },\n  // December\n  {\n    month: 1,\n    day: 1,\n    message: 'Happy New Year! Start the year with fresh crackers!'\n  },\n  // January 1st\n  {\n    month: 10,\n    day: 24,\n    message: 'Happy Diwali! Crackers for a brighter celebration!'\n  } // October 24th (fixed date)\n  ];\n  const [message, setMessage] = useState('Crackers available in 365 days, we deliver to Tamilnadu, Kerala, Andhra, and other states. The Minimum order values are 3000 for Tamilnadu and above 5000 for all other states. Thank you!');\n  useEffect(() => {\n    const updateMessage = () => {\n      const currentDate = new Date();\n      const currentMonth = currentDate.getMonth() + 1; // Month is 0-indexed in JavaScript\n      const currentDay = currentDate.getDate();\n\n      // Check for December (month 12) for Christmas\n      if (currentMonth === 12) {\n        setMessage('Merry Christmas! Special discounts available for Christmas.');\n        return;\n      }\n\n      // Check for January 1st for New Year\n      if (currentMonth === 1 && currentDay === 1) {\n        setMessage('Happy New Year! Start the year with fresh crackers!');\n        return;\n      }\n\n      // Check for Diwali in October (24th)\n      if (currentMonth === 10 && currentDay === 24) {\n        setMessage('Happy Diwali! Crackers for a brighter celebration!');\n        return;\n      }\n\n      // Default message for the rest of the year\n      setMessage('Crackers available in 365 days, we deliver to Tamilnadu, Kerala, Andhra, and other states. The Minimum order values are 3000 for Tamilnadu and above 5000 for all other states. Thank you!');\n    };\n\n    // Update message on mount\n    updateMessage();\n\n    // Set an interval to update the message every day (24 hours)\n    const interval = setInterval(updateMessage, 86400000);\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marqueue-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marqueue-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Marqueue, \"osni/VAoucC5TbCQVFBwQZA5y7k=\");\n_c = Marqueue;\nexport default Marqueue;\nvar _c;\n$RefreshReg$(_c, \"Marqueue\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Marqueue","_s","holidayMessages","month","message","day","setMessage","updateMessage","currentDate","Date","currentMonth","getMonth","currentDay","getDate","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/rajalakshmicrackers/crackersecom/src/usercomponents/marqueue.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './marqueue.css';\r\n\r\nconst Marqueue = () => {\r\n  // Holiday messages based on month or day\r\n  const holidayMessages = [\r\n    { month: 12, message: 'Merry Christmas! Special discounts available for Christmas.' }, // December\r\n    { month: 1, day: 1, message: 'Happy New Year! Start the year with fresh crackers!' }, // January 1st\r\n    { month: 10, day: 24, message: 'Happy Diwali! Crackers for a brighter celebration!' }, // October 24th (fixed date)\r\n  ];\r\n\r\n  const [message, setMessage] = useState(\r\n    'Crackers available in 365 days, we deliver to Tamilnadu, Kerala, Andhra, and other states. The Minimum order values are 3000 for Tamilnadu and above 5000 for all other states. Thank you!'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateMessage = () => {\r\n      const currentDate = new Date();\r\n      const currentMonth = currentDate.getMonth() + 1; // Month is 0-indexed in JavaScript\r\n      const currentDay = currentDate.getDate();\r\n\r\n      // Check for December (month 12) for Christmas\r\n      if (currentMonth === 12) {\r\n        setMessage('Merry Christmas! Special discounts available for Christmas.');\r\n        return;\r\n      }\r\n\r\n      // Check for January 1st for New Year\r\n      if (currentMonth === 1 && currentDay === 1) {\r\n        setMessage('Happy New Year! Start the year with fresh crackers!');\r\n        return;\r\n      }\r\n\r\n      // Check for Diwali in October (24th)\r\n      if (currentMonth === 10 && currentDay === 24) {\r\n        setMessage('Happy Diwali! Crackers for a brighter celebration!');\r\n        return;\r\n      }\r\n\r\n      // Default message for the rest of the year\r\n      setMessage(\r\n        'Crackers available in 365 days, we deliver to Tamilnadu, Kerala, Andhra, and other states. The Minimum order values are 3000 for Tamilnadu and above 5000 for all other states. Thank you!'\r\n      );\r\n    };\r\n\r\n    // Update message on mount\r\n    updateMessage();\r\n\r\n    // Set an interval to update the message every day (24 hours)\r\n    const interval = setInterval(updateMessage, 86400000);\r\n\r\n    // Cleanup interval on component unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"marqueue-container\">\r\n      <div className=\"marqueue-content\">\r\n        <h2>{message}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marqueue;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAA8D,CAAC;EAAE;EACvF;IAAED,KAAK,EAAE,CAAC;IAAEE,GAAG,EAAE,CAAC;IAAED,OAAO,EAAE;EAAsD,CAAC;EAAE;EACtF;IAAED,KAAK,EAAE,EAAE;IAAEE,GAAG,EAAE,EAAE;IAAED,OAAO,EAAE;EAAqD,CAAC,CAAE;EAAA,CACxF;EAED,MAAM,CAACA,OAAO,EAAEE,UAAU,CAAC,GAAGV,QAAQ,CACpC,4LACF,CAAC;EAEDC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACjD,MAAMC,UAAU,GAAGJ,WAAW,CAACK,OAAO,CAAC,CAAC;;MAExC;MACA,IAAIH,YAAY,KAAK,EAAE,EAAE;QACvBJ,UAAU,CAAC,6DAA6D,CAAC;QACzE;MACF;;MAEA;MACA,IAAII,YAAY,KAAK,CAAC,IAAIE,UAAU,KAAK,CAAC,EAAE;QAC1CN,UAAU,CAAC,qDAAqD,CAAC;QACjE;MACF;;MAEA;MACA,IAAII,YAAY,KAAK,EAAE,IAAIE,UAAU,KAAK,EAAE,EAAE;QAC5CN,UAAU,CAAC,oDAAoD,CAAC;QAChE;MACF;;MAEA;MACAA,UAAU,CACR,4LACF,CAAC;IACH,CAAC;;IAED;IACAC,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMO,QAAQ,GAAGC,WAAW,CAACR,aAAa,EAAE,QAAQ,CAAC;;IAErD;IACA,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKkB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCnB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BnB,OAAA;QAAAmB,QAAA,EAAKd;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA3DID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}